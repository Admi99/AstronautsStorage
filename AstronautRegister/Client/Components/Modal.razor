@using AstronautRegister.Shared
<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Remove astronaut</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Do you want to remove astronaut from list?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary bg-red-600" data-dismiss="modal" @onclick="() => Delete()">Delete</button>
                <button type="button" class="btn btn-secondary bg-blue-600" data-dismiss="modal" @onclick="() => Close()">Close</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {

    [Parameter, EditorRequired]
    public Func<Astronaut, Task> OnDelete { get; set; } = default!;

    private Astronaut _astronaut = new();

    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open(Astronaut astronaut)
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        _astronaut = astronaut;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = string.Empty;
        ShowBackdrop = false;
        StateHasChanged();
    }

    public void Delete()
    {
        OnDelete(_astronaut);
        ModalDisplay = "none";
        ModalClass = string.Empty;
        ShowBackdrop = false;
        StateHasChanged();
    }
}